<?php

use Illuminate\Database\Seeder;

class ArticlesTableSeeder extends Seeder
{

    /**
     * Auto generated seed file
     *
     * @return void
     */
    public function run()
    {
        

        \DB::table('articles')->delete();
        
        \DB::table('articles')->insert(array (
            0 => 
            array (
                'id' => 1,
                'author' => 1,
                'title' => 'testTitle',
                'subtitle' => 'testSubtitle',
                'date' => '2020-03-17',
                'content' => 'testContent123',
                'created_at' => NULL,
                'updated_at' => '2020-03-28 08:27:39',
                'status' => 0,
            ),
            1 => 
            array (
                'id' => 2,
                'author' => 1,
                'title' => 'aaaaa',
                'subtitle' => 'bbbbbb',
                'date' => '2020-03-17',
                'content' => '<h1>ccccccccc</h1>',
                'created_at' => '2020-03-17 13:17:42',
                'updated_at' => '2020-03-28 08:27:32',
                'status' => 0,
            ),
            2 => 
            array (
                'id' => 3,
                'author' => 1,
                'title' => 'SRP:單一職責原則',
                'subtitle' => 'SOLID',
                'date' => '2020-03-17',
            'content' => '<h1>SRP:單一職責原則</h1><div>顧名思義就是“每個模組只做一件事”或是“每個函式只做一件事”</div><div>的確有這樣的原則，但這不是SRP。</div><div> </div><div>一個模組只對唯一的一個角色負責</div><div>模組的定義是指一個原始檔，在大多數情況下適用。</div><div>角色的定義是指“使用者”或“利益相關者”，簡單來說就是希望變更系統的人。</div><div>模組主要的功用是把程式碼綁在一起對一個角色負責</div><div> </div><h4>違反的壞處1:意外重複</h4><p><br></p><div style="color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;"><div><span style="color: #569cd6;">class</span> <span style="color: #4ec9b0;">Employee</span>()</div><div>    {</div><div>        <span style="color: #569cd6;">function</span> <span style="color: #dcdcaa;">calculatePay</span>() <span style="color: #6a9955;">// 方法由會計部門指定，向CFO報告</span></div><div>        <span style="color: #569cd6;">function</span> <span style="color: #dcdcaa;">reportHours</span>()  <span style="color: #6a9955;">// 方法由人資指定，向COO報告</span></div><div>        <span style="color: #569cd6;">function</span> <span style="color: #dcdcaa;">save</span>() <span style="color: #6a9955;">// 方法由資料庫管理員指定，向CTO報告</span></div><div>    }</div></div><div><br></div><div><br></div><div>三個function在同一個類別裡都耦合到了其他的角色</div><div>假設calculatePay()和reportHours()共用了計算上班時間的演算法</div><div>開發者可能會把這個演算法放到一個名為regularHours()的函式</div><div>如果有一天CFO團隊想更改上班時間，COO團隊不想更改</div><div>CFO的開發者沒有注意到這個函式也被另一個函式呼叫就做了更改</div><div>那就出大事了。</div><div>避免這樣的遺憾，SRP說：分開不同角色所依賴的程式碼</div><div> </div><h4>違反的壞處2:合併</h4><div>假設Ａ團隊決定更改資料庫的Employee表格</div><div>Ｂ團隊決定更改報告格式</div><div>兩個修改都在同一個class裡，他們碰撞的結果是“合併”</div><div>合併是一件危險的事</div><div>避免這樣的遺憾，SRP說：分開不同角色所依賴的程式碼</div><div><br></div>',
                'created_at' => '2020-03-17 17:04:27',
                'updated_at' => '2020-04-08 12:33:30',
                'status' => 1,
            ),
            3 => 
            array (
                'id' => 4,
                'author' => 1,
                'title' => 'OCP:開放-封閉原則',
                'subtitle' => 'SOLID design pettren',
                'date' => '2020-03-17',
            'content' => '<h1>OCP:開放-封閉原則</h1><p>“一個軟體製品應該對於擴展是開放的，但對於修改是封閉的”</p><p>一個好的軟體應該是可擴展，而且沒必要修改的</p><p>當我們考慮架構的層級時，OCP相當重要。</p><p><br></p><h4>一個構想實驗</h4><p>假設網頁上有一個財務摘要系統，數據是滾動的，負數用紅色表示。</p><p>有一天有一個角色要求把相同的資訊化為一份報告列印在黑白印表機上，</p><p>報告要正確分頁頁首頁尾，還要把負數用括號括起來</p><p>顯然需要寫一些新的程式碼</p><p>一個好的架構可以把要修改的程式碼減到最小</p><p>怎麼做？先把不同因素產生的變化分開來（單一職責原則）</p><p>然後妥善組織他們的依賴關係（開放封閉原則）</p><p><br></p><p>PDFview -> Presenter -> Controller ->Interactor(業務原則 商業邏輯？)</p><p><br></p><p>保護Controller免受Presenter的改變影響</p><p>保護Presenter免受PDFview的改變影響</p><p>保護Interactor免受任何改變影響</p><p><br></p><p>結論：根據即將發生的變更建立一個層級的概念</p><p>把分離的功能組織到不同的層級裡面</p><p>讓高層級的元件受到保護不會被低層級的元件影響</p><p><br></p><h4>控制方向</h4><p>暫時看不懂</p><p><br></p><h4>資訊隱藏</h4><p>透過隱藏高層級元件的資訊來保護高層級元件免於低層級元件的影響，</p><p>軟體實體不應該依賴於他們不直接使用的東西</p><p>遞移依賴？</p><p>介面隔離原則？</p><p>共同重複使用原則？</p>',
                'created_at' => '2020-03-17 17:39:47',
                'updated_at' => '2020-03-28 07:02:05',
                'status' => 1,
            ),
            4 => 
            array (
                'id' => 5,
                'author' => 1,
                'title' => 'test中文',
                'subtitle' => '456',
                'date' => '2020-03-21',
                'content' => '<p>777</p>',
                'created_at' => '2020-03-21 07:57:22',
                'updated_at' => '2020-03-28 08:27:45',
                'status' => 0,
            ),
            5 => 
            array (
                'id' => 6,
                'author' => 1,
                'title' => 'testStatus',
                'subtitle' => '31221',
                'date' => '2020-03-28',
                'content' => '<p>3423423</p>',
                'created_at' => '2020-03-28 08:16:52',
                'updated_at' => '2020-03-28 08:16:52',
                'status' => 0,
            ),
            6 => 
            array (
                'id' => 7,
                'author' => 1,
                'title' => 'LSP:替換原則',
                'subtitle' => 'SOLID',
                'date' => '2020-03-31',
            'content' => '<h1>定義</h1><p>任意一個子類別可以替換掉父類別而不影響到程式運作</p><p><br></p><h3>例子1</h3><pre><b>Billing -&gt; License -&gt; Personal License (+calcFee)<br></b><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-&gt; Business License (+calcFee)</b></pre><p><b>該類別有一個calcFee方法來計算授權費用，兩個子類別使用不同的演算法計算</b></p><p><b>此設計符合LSP，因為底下的兩個子類別都可以替換掉License</b></p><p><br></p><h3><b>例子2</b></h3><pre><b>User -&gt; Rectangle(+setH, +setW) &lt;- Square(+setSide)</b></pre><p><b>在這個例子中Square不是Rectangle的正確子類別，因為Rectangle的高度和寬度可以獨立改變，</b></p><p><b>Square的高度和寬度需要一起改變，故此設計違反LSP，子類別無法任意替換父類別</b></p><div style="color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;"><div>Rectangle r = ... ;</div><div>    r.<span style="color: #dcdcaa;">setW</span>(<span style="color: #b5cea8;">5</span>);</div><div>    r.<span style="color: #dcdcaa;">setH</span>(<span style="color: #b5cea8;">2</span>);</div><div>    <span style="color: #dcdcaa;">assert</span>(r.<span style="color: #dcdcaa;">area</span>() == <span style="color: #b5cea8;">10</span>);</div></div><p><br></p><p>如果程式碼產生的是一個Square那Assert就會失敗</p><p><br></p><p>LSP涉及到介面與實作，在很多情況下LSP都是適用的，因為使用者依賴定義明確的介面以及實作的可替代性</p><p><br></p><h3>違反LSP的例子</h3><p>purplecab.com/driver/Bob/<span style="background-color: rgb(255, 255, 0);">pickupAdress</span>/24 Maple St./<span style="background-color: rgb(255, 255, 0);">pickupTime</span>/153/<span style="background-color: rgb(255, 255, 0);">destination</span>/ORD</p><p>以上是一個計程車調度服務的Url，無論計程車屬於哪間公司，客戶決定好之後，系統就會從司機紀錄獲得該Url來調度適合的計程車司機</p><p>這意味著所有的計程車公司都要遵守<span style="background-color: rgb(255, 255, 0);">pickupAdress、</span><span style="background-color: rgb(255, 255, 0);">pickupTime、destination</span>欄位</p><p>如果Acme計程車公司請了一個沒有閱讀規範的程式設計師，並把destination簡寫成dest</p><p>顯然我們需要為他新增一個特例</p><pre>if(driver.getDispatchUrl().startsWith("acme.com"))...</pre><p>但是沒有一個稱職的架構師會允許這種結構出現，因為把Acme加入程式碼本身就替各種錯誤預留了機會</p>',
                'created_at' => '2020-03-31 17:26:44',
                'updated_at' => '2020-04-08 12:34:58',
                'status' => 1,
            ),
            7 => 
            array (
                'id' => 8,
                'author' => 1,
                'title' => 'ISP:介面隔離原則',
                'subtitle' => 'SOLID design pettren',
                'date' => '2020-03-31',
            'content' => '<h1>定義</h1><p>客戶端不應該依賴它不需要的介面。</p><p><br></p><pre>User1 -> OPS(+op1, +op2, +op3)<br>User2->  OPS(+op1, +op2, +op3)<br>User3->  OPS(+op1, +op2, +op3)</pre><p><br></p><p>假設User1只使用op1，User2只使用op2，User3只使用op3</p><p>在這種情況下User1會不經意的依賴op2和op3</p><p>修改op2時將強制User1需要重新編譯和部署，儘管他所關心的部分並沒有修改。</p><p><br></p><p>解決這個問題的方法是透過介面來分離依賴的關係</p><pre>User1 ->  U1Ops<i>  <- OPS(+op1, +op2, +op3)<br>User2 ->  U2Ops<i>  <- OPS(+op1, +op2, +op3)<br>User3 ->  U3Ops<i>  <- OPS(+op1, +op2, +op3)</i></i></i></pre><p><i><i><i><br></i></i></i></p><p><i><i><i>如果你所依賴的模組超過了你所需要的，那就是對程式碼有害的</i></i></i></p><p><i><i><i>這可能導致了不必要的重新部署和編譯</i></i></i></p><p><i><i><i><br></i></i></i></p><p><i>假設架構師想把特定的框架F包含到S系統中</i></p><p><i>現在假設F的作者已經把它綁定到了特定的Ｄ資料庫上</i></p><p><i>那個S就依賴於F，F依賴於D</i></p><pre><i><b>System S -> FrameWork F -> DataBase D</b></i></pre><p><i>假設D包含了<span style="background-color: rgb(255, 255, 0);">F不會使用的feature</span>，因此S也不關心這些feature，</i></p><p><i>對於D feature的修改可能會導致F需要重新部署，也導致S的重新部署</i></p><p><i>最壞的情況是D中的一個feature失敗可能會導致F和S也失敗</i></p><p><i><br></i></p><h1><i><i><i>結論</i></i></i></h1><p><i><i><i>包包攜帶了不需要的東西，而你卻依賴了這樣的包包就可能會導致你未曾想過的麻煩</i></i></i></p><i><i><i> </i></i></i>',
                'created_at' => '2020-03-31 17:47:53',
                'updated_at' => '2020-04-03 06:06:37',
                'status' => 1,
            ),
            8 => 
            array (
                'id' => 9,
                'author' => 1,
                'title' => 'DIP:依賴反向原則',
                'subtitle' => 'SOLID design pettren',
                'date' => '2020-03-31',
            'content' => '<h1>定義</h1><p>依賴反向原則告訴我們，最靈活的系統是原始碼的依賴關係<span style="background-color: rgb(255, 255, 0);">只涉及抽象不涉及具體</span>的那些系統</p><p>但把這個想法當作唯一的規則是不切實際的，因為軟體系統還是必須依賴許多具體的機制</p><p>我們應該避免依賴的是系統中<span style="background-color: rgb(255, 255, 0);">容易變化</span>的具體元素，它們是我們正在開發並且經常變化的模組</p><p><br></p><h3>穩定的抽象</h3><p>每一個抽象介面的對應到他實作的改變</p><p>相反地，對具體實作的改變通常不要求改變它們實作的介面</p><p>因此介面比實作還要穩定</p><p><br></p><p>好的軟體設計師和架構師會努力減少介面的變動性，他們試圖找到增加實作功能但不必更改介面的方式</p><p>這意味著穩定的軟體架構應該避免依賴容易變動的具體，偏愛使用穩定的抽象介面</p><p><br></p><ul><li>不要參考易變的具體類別</li><li>不要從易變的具體類別衍生</li><li>不要改寫具體函式</li><li>永遠不要提到任何具體和易變的名稱</li></ul><p><br></p><h3>工廠</h3><p>為了遵循這些守則，建立易變的具體物件需要進行特殊的處理，謹慎是必要的</p><p>因為幾乎在所有語言中，建立一個物件都要求依賴於該物件的具體意義</p><p>在物件導向語言中，我們將使用一個<span style="background-color: rgb(255, 255, 0);">抽象工廠模式</span>來管理這個依賴關係</p><p><span style="color: rgb(255, 255, 255); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px; font-style: italic; background-color: rgb(51, 51, 51);">工廠只負責『</span><span style="font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px; font-style: italic; background-color: rgb(51, 51, 51); color: rgb(244, 143, 177);">生產</span><span style="color: rgb(255, 255, 255); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px; font-style: italic; background-color: rgb(51, 51, 51);">』，不牽涉到 實例依賴物件的 『</span><span style="font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px; font-style: italic; background-color: rgb(51, 51, 51); color: rgb(128, 203, 196);">控制流程</span><span style="color: rgb(255, 255, 255); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px; font-style: italic; background-color: rgb(51, 51, 51);">』。</span><br style="color: rgb(255, 255, 255); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px; font-style: italic; background-color: rgb(51, 51, 51);"><span style="color: rgb(255, 255, 255); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px; font-style: italic; background-color: rgb(51, 51, 51);">高階模組是否依賴於工廠，全憑你怎麼使用它、在哪使用它。</span></p><p><span style="color: rgb(71, 66, 93); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px;">舉幾個簡單的例子:</span><br style="color: rgb(71, 66, 93); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px;"><span style="color: rgb(71, 66, 93); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px;">1. 傳統控制流程的 『使用工廠 實例插件』:</span></p><div class="cljs-row" style="background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(29, 31, 33); margin-bottom: -0.15px; color: rgb(197, 200, 198); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; white-space: pre;"><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;"><span class="hljs-class" style="box-sizing: content-box; transition: color 0.2s ease 0s;"><span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;"><br class="Apple-interchange-newline">class</span> <span class="hljs-title" style="box-sizing: content-box; color: rgb(240, 198, 116); transition: color 0.2s ease 0s;">Computer</span> {</span></div></div><div class="cljs-row" style="background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(29, 31, 33); margin-bottom: -0.15px; color: rgb(197, 200, 198); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; white-space: pre;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">
</div></div><div class="cljs-row" style="background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(29, 31, 33); margin-bottom: -0.15px; color: rgb(197, 200, 198); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; white-space: pre;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">private</span> Game game;
</div></div><div class="cljs-row" style="background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(29, 31, 33); margin-bottom: -0.15px; color: rgb(197, 200, 198); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; white-space: pre;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    
</div></div><div class="cljs-row" style="background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(29, 31, 33); margin-bottom: -0.15px; color: rgb(197, 200, 198); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; white-space: pre;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    <span class="hljs-function" style="box-sizing: content-box; transition: color 0.2s ease 0s;"><span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">public</span> <span class="hljs-title" style="box-sizing: content-box; color: rgb(240, 198, 116); transition: color 0.2s ease 0s;">Computer</span><span class="hljs-params" style="box-sizing: content-box; transition: color 0.2s ease 0s;">()</span> </span>{
</div></div><div class="cljs-row" style="background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(29, 31, 33); margin-bottom: -0.15px; color: rgb(197, 200, 198); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; white-space: pre;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">        GameFactory factory = <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">new</span> ImplGameFactory(); <span class="hljs-comment" style="box-sizing: content-box; color: rgb(112, 120, 128); transition: color 0.2s ease 0s;">// 實例 遊戲工廠 (注意多型)</span>
</div></div><div class="cljs-row" style="background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(29, 31, 33); margin-bottom: -0.15px; color: rgb(197, 200, 198); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; white-space: pre;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">        <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">this</span>.game = factory.createGame(); <span class="hljs-comment" style="box-sizing: content-box; color: rgb(112, 120, 128); transition: color 0.2s ease 0s;">// 透過工廠，取得遊戲</span>
</div></div><div class="cljs-row" style="background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(29, 31, 33); margin-bottom: -0.15px; color: rgb(197, 200, 198); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; white-space: pre;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    }
</div></div><div class="cljs-row" style="background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(29, 31, 33); margin-bottom: -0.15px; color: rgb(197, 200, 198); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; white-space: pre;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    
</div></div><div class="cljs-row" style="background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(29, 31, 33); margin-bottom: -0.15px; color: rgb(197, 200, 198); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; white-space: pre;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    ...
</div></div><div class="cljs-row" style="background-image: inherit; background-position: inherit; background-size: inherit; background-repeat: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(29, 31, 33); margin-bottom: -0.15px; color: rgb(197, 200, 198); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; white-space: pre;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">}</div></div><p><br></p><p><span style="color: rgb(71, 66, 93); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px;">2. 控制反轉 的 『使用工廠 實例插件』 — [型一] 插件注入：</span></p><p style="margin-bottom: 5px; color: rgb(71, 66, 93); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px;"></p><pre class="cljs" style="overflow: visible; font-size: 14px; margin-bottom: 0px; line-height: 1.42857; box-shadow: rgb(119, 119, 119) 3px 3px 3px;"><div class="cljs-wrapper cljs-ten" style="position: relative;"><code class="hljs cpp" style="padding: 0.5em; color: rgb(197, 200, 198); background: rgb(29, 31, 33); white-space: pre; overflow-wrap: normal; display: block; overflow-x: auto; line-height: 1.45; counter-reset: a 0; text-size-adjust: 100%; transition: background 0.5s ease 0s, padding 0.5s ease 0s;"><div class="cljs-container" style="display: inline-block; min-width: 100%; background: inherit;"><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;"><span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">public</span> <span class="hljs-class" style="box-sizing: content-box; transition: color 0.2s ease 0s;"><span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">class</span> <span class="hljs-title" style="box-sizing: content-box; color: rgb(240, 198, 116); transition: color 0.2s ease 0s;">Main</span> {</span>
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    <span class="hljs-function" style="box-sizing: content-box; transition: color 0.2s ease 0s;"><span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">public</span> <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">static</span> <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">void</span> <span class="hljs-title" style="box-sizing: content-box; color: rgb(240, 198, 116); transition: color 0.2s ease 0s;">main</span><span class="hljs-params" style="box-sizing: content-box; transition: color 0.2s ease 0s;">(String[] args)</span> </span>{
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">        GameFactory factory = <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">new</span> ImplGameFactory(); <span class="hljs-comment" style="box-sizing: content-box; color: rgb(112, 120, 128); transition: color 0.2s ease 0s;">// 實例 遊戲工廠 (注意多型)</span>
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">        Game game = factory.createGame(); <span class="hljs-comment" style="box-sizing: content-box; color: rgb(112, 120, 128); transition: color 0.2s ease 0s;">// 透過工廠，取得遊戲</span>
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">        Computer computer = <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">new</span> Computer(game); <span class="hljs-comment" style="box-sizing: content-box; color: rgb(112, 120, 128); transition: color 0.2s ease 0s;">// game 依賴注入</span>
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    }
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">}</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;"><span class="hljs-class" style="box-sizing: content-box; transition: color 0.2s ease 0s;"><span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">class</span> <span class="hljs-title" style="box-sizing: content-box; color: rgb(240, 198, 116); transition: color 0.2s ease 0s;">Computer</span> {</span></div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">private</span> Game game;</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    <span class="hljs-comment" style="box-sizing: content-box; color: rgb(112, 120, 128); transition: color 0.2s ease 0s;">// 建構元注入 (Constructor Injection)</span>
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    <span class="hljs-function" style="box-sizing: content-box; transition: color 0.2s ease 0s;"><span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">public</span> <span class="hljs-title" style="box-sizing: content-box; color: rgb(240, 198, 116); transition: color 0.2s ease 0s;">Computer</span><span class="hljs-params" style="box-sizing: content-box; transition: color 0.2s ease 0s;">(Game game)</span> </span>{
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">        <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">this</span>.game = game;
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    }
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    ...
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">}</div></div></div></code><button class="cljs-copy-btn cljs-bottom-right-widget" data-tooltip-text="Copy to clipboard" style="position: absolute; font-size: 0.85em; padding: 0px; color: rgb(221, 221, 221); border-radius: 10px; transition: background 0.5s ease 0s; border-width: initial; border-style: none; border-color: initial; width: 3.5em; height: 2em; outline: none; bottom: 1em; right: 1.3em;">Copy</button><div class="cljs-toggle-btn cljs-top-right-widget" style="background-color: rgb(255, 255, 255); width: 29px; height: 29px; opacity: 0; padding: 2px; border-radius: 25%; display: grid; box-shadow: rgb(50, 50, 50) 2px 2px 2px; transition-property: opacity; transition-duration: 0.35s; position: absolute; top: 0.65em; right: 1.3em;"></div></div></pre><p style="margin-bottom: 5px; color: rgb(71, 66, 93); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px;">&nbsp;</p><hr style="color: rgb(71, 66, 93); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px;"><p><span style="color: rgb(71, 66, 93); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px;">&nbsp;</span><br style="color: rgb(71, 66, 93); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px;"><span style="color: rgb(71, 66, 93); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px;">3. 控制反轉 的 『使用工廠 實例插件』 — [型二] 工廠注入：</span></p><p style="margin-bottom: 5px; color: rgb(71, 66, 93); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px;"></p><pre class="cljs" style="overflow: visible; font-size: 14px; margin-bottom: 0px; line-height: 1.42857; box-shadow: rgb(119, 119, 119) 3px 3px 3px;"><div class="cljs-wrapper cljs-ten" style="position: relative;"><code class="hljs cpp" style="padding: 0.5em; color: rgb(197, 200, 198); background: rgb(29, 31, 33); white-space: pre; overflow-wrap: normal; display: block; overflow-x: auto; line-height: 1.45; counter-reset: a 0; text-size-adjust: 100%; transition: background 0.5s ease 0s, padding 0.5s ease 0s;"><div class="cljs-container" style="display: inline-block; min-width: 100%; background: inherit;"><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;"><span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">public</span> <span class="hljs-class" style="box-sizing: content-box; transition: color 0.2s ease 0s;"><span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">class</span> <span class="hljs-title" style="box-sizing: content-box; color: rgb(240, 198, 116); transition: color 0.2s ease 0s;">Main</span> {</span></div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    <span class="hljs-function" style="box-sizing: content-box; transition: color 0.2s ease 0s;"><span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">public</span> <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">static</span> <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">void</span> <span class="hljs-title" style="box-sizing: content-box; color: rgb(240, 198, 116); transition: color 0.2s ease 0s;">main</span><span class="hljs-params" style="box-sizing: content-box; transition: color 0.2s ease 0s;">(String[] args)</span> </span>{
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">        GameFactory factory = <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">new</span> ImplGameFactory(); <span class="hljs-comment" style="box-sizing: content-box; color: rgb(112, 120, 128); transition: color 0.2s ease 0s;">// 實例 遊戲工廠 (注意多型)</span>
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">        Computer computer = <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">new</span> Computer(factory); <span class="hljs-comment" style="box-sizing: content-box; color: rgb(112, 120, 128); transition: color 0.2s ease 0s;">// factory 依賴注入</span>
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    }
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">}</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;"><span class="hljs-class" style="box-sizing: content-box; transition: color 0.2s ease 0s;"><span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">class</span> <span class="hljs-title" style="box-sizing: content-box; color: rgb(240, 198, 116); transition: color 0.2s ease 0s;">Computer</span> {</span></div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">private</span> Game game;</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    <span class="hljs-comment" style="box-sizing: content-box; color: rgb(112, 120, 128); transition: color 0.2s ease 0s;">// 建構元注入 (Constructor Injection)</span>
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    <span class="hljs-function" style="box-sizing: content-box; transition: color 0.2s ease 0s;"><span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">public</span> <span class="hljs-title" style="box-sizing: content-box; color: rgb(240, 198, 116); transition: color 0.2s ease 0s;">Computer</span><span class="hljs-params" style="box-sizing: content-box; transition: color 0.2s ease 0s;">(GameFactory factory)</span> </span>{
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">        <span class="hljs-keyword" style="box-sizing: content-box; color: rgb(129, 162, 190); transition: color 0.2s ease 0s;">this</span>.game = factory.createGame(); <span class="hljs-comment" style="box-sizing: content-box; color: rgb(112, 120, 128); transition: color 0.2s ease 0s;">// 透過工廠，取得遊戲</span>
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    }
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">    ...
</div></div><div class="cljs-row" style="background: inherit; margin-bottom: -0.15px;"><div class="cljs-number" style="box-sizing: content-box; color: rgb(153, 153, 153); position: absolute; left: 0px; text-align: right; letter-spacing: 1px; background: inherit; opacity: 0.9; counter-increment: a 1; border-right: 1px solid rgb(221, 221, 221); z-index: 1; width: 2.2em;"></div><div class="cljs-content" style="box-sizing: content-box; transition: margin-left 0.35s ease 0s, color 0.2s ease 0s; margin-left: 2.7em;">}</div></div></div></code><button class="cljs-copy-btn cljs-bottom-right-widget" data-tooltip-text="Copy to clipboard" style="position: absolute; font-size: 0.85em; padding: 0px; color: rgb(221, 221, 221); border-radius: 10px; transition: background 0.5s ease 0s; border-width: initial; border-style: none; border-color: initial; width: 3.5em; height: 2em; outline: none; bottom: 1em; right: 1.3em;">Copy</button><div class="cljs-toggle-btn cljs-top-right-widget" style="background-color: rgb(255, 255, 255); width: 29px; height: 29px; opacity: 0; padding: 2px; border-radius: 25%; display: grid; box-shadow: rgb(50, 50, 50) 2px 2px 2px; transition-property: opacity; transition-duration: 0.35s; position: absolute; top: 0.65em; right: 1.3em;"></div></div></pre><p style="margin-bottom: 5px; color: rgb(71, 66, 93); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px;">&nbsp;<br>可以看到<br>第一種、傳統控制流程的 『使用工廠 實例插件』：<br>高階模組 (Computer) 不依賴於 低階模組，而是依賴於抽象 (Game)。<span style="color: rgb(0, 150, 136);">&nbsp;(Good)</span><br>高階模組 (Computer) 依賴於 抽象 (GameFactory)。&nbsp;<span style="color: rgb(0, 150, 136);">(Good)</span><br>高階模組 (Computer) 依賴於 具體實作工廠 (ImplGameFactory)。&nbsp;<span style="color: rgb(233, 30, 99);">(Bad)</span><br>&nbsp;<br>第二種 及 第三種 的方式，<br><span style="color: rgb(33, 150, 243);">一樣使用了工廠</span>，卻可解除 高階模組 與 具體工廠 的依賴關係！</p><p style="margin-bottom: 5px; color: rgb(71, 66, 93); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px;"><br></p><p style="margin-bottom: 5px; color: rgb(71, 66, 93); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px;">來源：<a href="https://notfalse.net/3/ioc-di#IoCDI-vs-Factory-Method-Pattern" target="_blank">notfalse.net</a></p><p><span style="color: rgb(255, 255, 255); font-family: &quot;Source Sans Pro&quot;, sans-serif; font-size: 18px; font-style: italic; background-color: rgb(51, 51, 51);"><br></span><br></p>',
                'created_at' => '2020-03-31 18:51:21',
                'updated_at' => '2020-03-31 18:51:21',
                'status' => 1,
            ),
            9 => 
            array (
                'id' => 10,
                'author' => 1,
                'title' => 'testpost',
                'subtitle' => 'test',
                'date' => '2020-04-03',
                'content' => '<p>test</p>',
                'created_at' => '2020-04-03 06:16:46',
                'updated_at' => '2020-04-03 06:18:21',
                'status' => 0,
            ),
            10 => 
            array (
                'id' => 11,
                'author' => 1,
                'title' => 'testImage',
                'subtitle' => 'test',
                'date' => '2020-04-04',
            'content' => '<p><img src="http://127.0.0.1:8000/showImage/12" style="width: 25%;"></p><p>test</p><pre>function() {}</pre>',
                'created_at' => '2020-04-04 10:34:22',
                'updated_at' => '2020-04-11 06:24:03',
                'status' => 0,
            ),
            11 => 
            array (
                'id' => 12,
                'author' => 1,
                'title' => 'SummerNote:輕量化的所見即所得編輯器',
                'subtitle' => 'WYSIWYG',
                'date' => '2020-04-11',
            'content' => '<h1>ＷordPress SummerNote文章編輯器</h1><p>採用的是<a href="https://zh.wikipedia.org/wiki/%E6%89%80%E8%A6%8B%E5%8D%B3%E6%89%80%E5%BE%97" target="_blank" rel="noopener noreferrer" style="box-sizing: inherit; background-color: rgb(255, 255, 255); color: rgb(229, 85, 78); text-decoration-line: underline; transition: color 0.2s ease-in-out 0s, background-color 0.2s ease-in-out 0s; font-family: Arial, source-han-sans-traditional, sans-serif; text-align: justify;">所見即所得</a><span style="color: rgb(51, 51, 51); font-family: Arial, source-han-sans-traditional, sans-serif; text-align: justify;">（What You See Is What You Get，縮寫 WYSIWYG)的操作介面來寫文章，</span>WordPress 內建文章編輯功能就是此形式，可以用比較簡單的方式產生HTML程式碼。</p><p>Su<span style="color: rgb(25, 25, 25); font-family: 微軟正黑體, sans-serif, Lato, 游ゴシック体, " yu="" gothic",="" yugothic,="" "ヒラギノ角ゴシック="" pro",="" "hiragino="" kaku="" gothic="" メイリオ,="" "meiryo,="" osaka",="" "ＭＳ="" Ｐゴシック",="" "ms="" pgothic";="" font-size:="" 16px;"="">mmernote 提供了簡單的操作並且有功能強大的 API，它提供了大量的自定義選項的設計</span><span style="color: rgb(25, 25, 25); font-family: 微軟正黑體, sans-serif, Lato, 游ゴシック体, " yu="" gothic",="" yugothic,="" "ヒラギノ角ゴシック="" pro",="" "hiragino="" kaku="" gothic="" メイリオ,="" "meiryo,="" osaka",="" "ＭＳ="" Ｐゴシック",="" "ms="" pgothic";="" font-size:="" 16px;"="">和功能。對於主要的指令碼語言或框架（PHP，Ruby，Django，NodeJS），該專案有提供了整合示例。</span></p><p><span style="color: rgb(25, 25, 25); font-family: 微軟正黑體, sans-serif, Lato, 游ゴシック体, " yu="" gothic",="" yugothic,="" "ヒラギノ角ゴシック="" pro",="" "hiragino="" kaku="" gothic="" メイリオ,="" "meiryo,="" osaka",="" "ＭＳ="" Ｐゴシック",="" "ms="" pgothic";="" font-size:="" 16px;"="">官網：</span><a href="http://summernote.org/" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(186, 57, 57); text-decoration-line: none; font-family: 微軟正黑體, sans-serif, Lato, 游ゴシック体, " yu="" gothic",="" yugothic,="" "ヒラギノ角ゴシック="" pro",="" "hiragino="" kaku="" gothic="" メイリオ,="" "meiryo,="" osaka",="" "ＭＳ="" Ｐゴシック",="" "ms="" pgothic";="" font-size:="" 16px;="" background-color:="" rgb(255,="" 255,="" 255);"="">http://summernote.org/</a><br style="box-sizing: inherit; color: rgb(25, 25, 25); font-family: 微軟正黑體, sans-serif, Lato, 游ゴシック体, " yu="" gothic",="" yugothic,="" "ヒラギノ角ゴシック="" pro",="" "hiragino="" kaku="" gothic="" メイリオ,="" "meiryo,="" osaka",="" "ＭＳ="" Ｐゴシック",="" "ms="" pgothic";="" font-size:="" 16px;"=""><span style="color: rgb(25, 25, 25); font-family: 微軟正黑體, sans-serif, Lato, 游ゴシック体, " yu="" gothic",="" yugothic,="" "ヒラギノ角ゴシック="" pro",="" "hiragino="" kaku="" gothic="" メイリオ,="" "meiryo,="" osaka",="" "ＭＳ="" Ｐゴシック",="" "ms="" pgothic";="" font-size:="" 16px;"="">github地址：</span><a href="https://github.com/summernote/summernote" rel="nofollow noreferrer" style="box-sizing: inherit; color: rgb(186, 57, 57); text-decoration-line: none; font-family: 微軟正黑體, sans-serif, Lato, 游ゴシック体, " yu="" gothic",="" yugothic,="" "ヒラギノ角ゴシック="" pro",="" "hiragino="" kaku="" gothic="" メイリオ,="" "meiryo,="" osaka",="" "ＭＳ="" Ｐゴシック",="" "ms="" pgothic";="" font-size:="" 16px;="" background-color:="" rgb(255,="" 255,="" 255);"="">https://github.com/summernote…</a></p><p><img src="http://127.0.0.1:8000/showImage/13" style="width: 708px;"><br></p><p><br></p><h4>使用方式</h4><p>最簡單的方式是使用cdn的方式include JS/CSS</p><div style="color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, " courier="" new",="" monospace;="" font-size:="" 12px;="" line-height:="" 18px;="" white-space:="" pre;"=""><div>  <span style="color: #6a9955;"><!-- include summernote css/js --></span></div><div><div style="font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;"><div> <span style="color: #6a9955;">&lt;!-- include summernote css/js --&gt;</span></div><div>  <span style="color: #808080;">&lt;</span><span style="color: #569cd6;">link</span> <span style="color: #9cdcfe;">href</span>=<span style="color: #ce9178;">"https://cdn.jsdelivr.net/npm/summernote@0.8.16/dist/summernote.min.css"</span> <span style="color: #9cdcfe;">rel</span>=<span style="color: #ce9178;">"stylesheet"</span><span style="color: #808080;">&gt;</span></div><div>  <span style="color: #808080;">&lt;</span><span style="color: #569cd6;">script</span> <span style="color: #9cdcfe;">src</span>=<span style="color: #ce9178;">"https://cdn.jsdelivr.net/npm/summernote@0.8.16/dist/summernote.min.js"</span><span style="color: #808080;">&gt;&lt;/</span><span style="color: #569cd6;">script</span><span style="color: #808080;">&gt;</span></div></div></div></div><p>&nbsp; &nbsp; &nbsp;&nbsp;</p><p>Target a element</p><div style="color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, " courier="" new",="" monospace;="" font-size:="" 12px;="" line-height:="" 18px;="" white-space:="" pre;"=""><div style="font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;"><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">textarea</span> <span style="color: #9cdcfe;">id</span>=<span style="color: #ce9178;">"summernote"</span> <span style="color: #9cdcfe;">name</span>=<span style="color: #ce9178;">"editordata"</span><span style="color: #808080;">&gt;</span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">textarea</span><span style="color: #808080;">&gt;</span></div></div><p><br></p><p>相關設定</p><div style="color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, " courier="" new",="" monospace;="" font-size:="" 12px;="" line-height:="" 18px;="" white-space:="" pre;"=""><div style="font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;"><div>    <span style="color: #dcdcaa;">$</span>(<span style="color: #ce9178;">\'#summernote\'</span>).<span style="color: #dcdcaa;">summernote</span>({</div><div>      <span style="color: #9cdcfe;">placeholder:</span> <span style="color: #ce9178;">\'Content\'</span>,</div><div>      <span style="color: #9cdcfe;">tabsize:</span> <span style="color: #b5cea8;">2</span>,</div><div>      <span style="color: #9cdcfe;">height:</span> <span style="color: #b5cea8;">350</span>,</div><div>      <span style="color: #9cdcfe;">callbacks:</span> {</div><div>        <span style="color: #dcdcaa;">onImageUpload</span><span style="color: #9cdcfe;">:</span> <span style="color: #569cd6;">function</span> (<span style="color: #9cdcfe;">files</span>) {</div><div>            <span style="color: #9cdcfe;">img</span> = <span style="color: #dcdcaa;">sendFile</span>(<span style="color: #9cdcfe;">files</span>[<span style="color: #b5cea8;">0</span>], <span style="color: #dcdcaa;">$</span>(<span style="color: #569cd6;">this</span>));</div><div>        }</div><div>      }</div><div>    });</div></div></div><p>更多請查閱官網</p>',
                'created_at' => '2020-04-11 07:15:07',
                'updated_at' => '2020-04-11 07:28:53',
                'status' => 1,
            ),
            12 => 
            array (
                'id' => 13,
                'author' => 1,
                'title' => 'SummerNote : 實現圖片上傳功能',
                'subtitle' => 'WSYWIG',
                'date' => '2020-04-11',
            'content' => '<p>JS</p><div style="color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;"><div>    <span style="color: #dcdcaa;">$</span>(<span style="color: #ce9178;">\'#summernote\'</span>).<span style="color: #dcdcaa;">summernote</span>({</div><div>      <span style="color: #9cdcfe;">placeholder:</span> <span style="color: #ce9178;">\'Content\'</span>,</div><div>      <span style="color: #9cdcfe;">callbacks:</span> {</div><div>        <span style="color: #dcdcaa;">onImageUpload</span><span style="color: #9cdcfe;">:</span> <span style="color: #569cd6;">function</span> (<span style="color: #9cdcfe;">files</span>) {</div><div>            <span style="color: #9cdcfe;">img</span> = <span style="color: #dcdcaa;">sendFile</span>(<span style="color: #9cdcfe;">files</span>[<span style="color: #b5cea8;">0</span>], <span style="color: #dcdcaa;">$</span>(<span style="color: #569cd6;">this</span>));</div><div>        }</div><div>      }</div><div>    });</div></div><p><br></p><p>圖片上傳function</p><div courier="" new",="" monospace;="" font-size:="" 12px;="" line-height:="" 18px;="" white-space:="" pre;"="" style="color: rgb(212, 212, 212); background-color: rgb(30, 30, 30);"><div><span style="font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; white-space: pre;">    </span><span style="font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; white-space: pre; color: rgb(86, 156, 214);">function</span><span style="font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; white-space: pre;"> </span><span style="font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; white-space: pre; color: rgb(220, 220, 170);">sendFile</span><span style="font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; white-space: pre;">(</span><span style="font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; white-space: pre; color: rgb(156, 220, 254);">file</span><span style="font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; white-space: pre;">, </span><span style="font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; white-space: pre; color: rgb(156, 220, 254);">editor</span><span style="font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; white-space: pre;">) {</span></div><div style="font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;"><div>      + <span style="color: #569cd6;">new</span> <span style="color: #4ec9b0;">Date</span>();</div><div>      <span style="color: #569cd6;">var</span> <span style="color: #9cdcfe;">form_data</span> = <span style="color: #569cd6;">new</span> <span style="color: #4ec9b0;">FormData</span>();</div><div>      <span style="color: #9cdcfe;">form_data</span>.<span style="color: #dcdcaa;">append</span>(<span style="color: #ce9178;">\'file\'</span>, <span style="color: #9cdcfe;">file</span>);</div><div>      <span style="color: #569cd6;">var</span> <span style="color: #9cdcfe;">filename</span> = <span style="color: #4ec9b0;">Date</span>.<span style="color: #dcdcaa;">now</span>();</div><div>      </div><div>      <span style="color: #9cdcfe;">$</span>.<span style="color: #dcdcaa;">ajax</span>({</div><div>        <span style="color: #9cdcfe;">data:</span> <span style="color: #9cdcfe;">form_data</span>,</div><div>        <span style="color: #9cdcfe;">type:</span> <span style="color: #ce9178;">"POST"</span>,</div><div>        <span style="color: #9cdcfe;">url:</span> <span style="color: #ce9178;">\'Your </span><span style="color: #ce9178;">uploadFile URL\'</span>,</div><div>        <span style="color: #9cdcfe;">headers:</span> {</div><div>          <span style="color: #ce9178;">\'X-CSRF-TOKEN\'</span><span style="color: #9cdcfe;">:</span> <span style="color: #dcdcaa;">$</span>(<span style="color: #ce9178;">\'meta[name="csrf-token"]\'</span>).<span style="color: #dcdcaa;">attr</span>(<span style="color: #ce9178;">\'content\'</span>)</div><div>        },</div><div>        <span style="color: #9cdcfe;">cache:</span> <span style="color: #569cd6;">false</span>,</div><div>        <span style="color: #9cdcfe;">contentType:</span> <span style="color: #569cd6;">false</span>,</div><div>        <span style="color: #9cdcfe;">processData:</span> <span style="color: #569cd6;">false</span>,</div><div>        <span style="color: #dcdcaa;">success</span><span style="color: #9cdcfe;">:</span> <span style="color: #569cd6;">function</span>(<span style="color: #9cdcfe;">url</span>) {</div><div>          <span style="color: #dcdcaa;">$</span>(<span style="color: #ce9178;">\'#summernote\'</span>).<span style="color: #dcdcaa;">summernote</span>(<span style="color: #ce9178;">\'editor.insertImage\'</span>, <span style="color: #9cdcfe;">url</span>);</div><div>        },</div><div>        <span style="color: #dcdcaa;">error</span><span style="color: #9cdcfe;">:</span> <span style="color: #569cd6;">function</span>(<span style="color: #9cdcfe;">url</span>) {</div><div>          <span style="color: #4ec9b0;">console</span>.<span style="color: #dcdcaa;">log</span>(<span style="color: #9cdcfe;">url</span>);</div><div>        }</div><div>      });</div><div>    }</div></div></div>',
                'created_at' => '2020-04-11 07:26:24',
                'updated_at' => '2020-04-11 07:26:24',
                'status' => 1,
            ),
            13 => 
            array (
                'id' => 14,
                'author' => 1,
                'title' => 'CSRF 保護',
                'subtitle' => 'Laravel',
                'date' => '2020-04-11',
            'content' => '<p style="margin-bottom: 0px; line-height: 1.7; font-size: 14.5px; color: rgb(82, 82, 82); font-family: &quot;Source Sans Pro&quot;, sans-serif;">Laravel 可以輕易地保護你的應用程式免受到<a href="https://en.wikipedia.org/wiki/Cross-site_request_forgery" style="color: rgb(244, 100, 95); padding: 0px; margin: 0px; transition: background-color 0.2s linear 0s, color 0.2s linear 0s;">跨網站偽造請求攻擊</a>（CSRF）。跨網站偽造請求是一種惡意的攻擊，會偽造已認證的使用者執行未授權的指令。</p><p style="margin-bottom: 0px; line-height: 1.7; font-size: 14.5px; color: rgb(82, 82, 82); font-family: &quot;Source Sans Pro&quot;, sans-serif;">Laravel 透過應用程式自動產生一個 CSRF「token」來管理每個活躍的使用者 session。這個 token 用於驗證已認證使用者是否實際向應用程式發出請求。</p><p style="margin-bottom: 0px; line-height: 1.7; font-size: 14.5px; color: rgb(82, 82, 82); font-family: &quot;Source Sans Pro&quot;, sans-serif;">在你每次定義 HTML 表單的時候，應該在表單中插入隱藏的 CSRF token，這樣用於預防 CSRF 攻擊的中介層可以驗證表單請求。你可以使用&nbsp;<code class=" language-php" style="font-family: &quot;Operator Mono&quot;, &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, monospace; font-size: 11px; padding: 1px 5px; color: rgb(244, 100, 95); background: rgb(240, 242, 241); border-radius: 3px; text-shadow: white 0px 1px; direction: ltr; white-space: pre; word-spacing: normal; word-break: normal; line-height: 2; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;">csrf_field</code>&nbsp;輔助函式來產生 token 到表單中</p><p style="margin-bottom: 0px; line-height: 1.7; font-size: 14.5px; color: rgb(82, 82, 82); font-family: &quot;Source Sans Pro&quot;, sans-serif;"><br></p><pre id="code1" class=" language-php" style="font-family: &quot;Operator Mono&quot;, &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, monospace; font-size: 11px; padding: 10px; margin-top: 10px; margin-bottom: 20px; line-height: 2; color: black; word-break: normal; background: rgba(238, 238, 238, 0.35); border-radius: 3px; text-shadow: white 0px 1px; direction: ltr; tab-size: 4; hyphens: none; box-shadow: rgba(0, 0, 0, 0.125) 0px 1px 1px; vertical-align: middle;"><code class=" language-php" style="font-family: &quot;Operator Mono&quot;, &quot;Fira Code&quot;, Consolas, Monaco, &quot;Andale Mono&quot;, monospace; font-size: 11px; color: black; white-space: pre; text-shadow: white 0px 1px; direction: ltr; word-spacing: normal; line-height: 2; tab-size: 4; hyphens: none; vertical-align: middle;"><span class="token markup"><span class="token tag" style="color: rgb(218, 86, 74);"><span class="token tag"><span class="token punctuation" style="color: rgb(153, 153, 153);">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value" style="color: rgb(0, 119, 170);"><span class="token punctuation" style="color: rgb(153, 153, 153);">=</span><span class="token punctuation" style="color: rgb(153, 153, 153);">"</span>POST<span class="token punctuation" style="color: rgb(153, 153, 153);">"</span></span> <span class="token attr-name">action</span><span class="token attr-value" style="color: rgb(0, 119, 170);"><span class="token punctuation" style="color: rgb(153, 153, 153);">=</span><span class="token punctuation" style="color: rgb(153, 153, 153);">"</span>/profile<span class="token punctuation" style="color: rgb(153, 153, 153);">"</span></span><span class="token punctuation" style="color: rgb(153, 153, 153);">&gt;</span></span></span>
<span class="token punctuation" style="color: rgb(153, 153, 153);">{</span><span class="token punctuation" style="color: rgb(153, 153, 153);">{</span> <span class="token function" style="color: rgb(85, 85, 85);">csrf_field<span class="token punctuation" style="color: rgb(153, 153, 153);">(</span></span><span class="token punctuation" style="color: rgb(153, 153, 153);">)</span> <span class="token punctuation" style="color: rgb(153, 153, 153);">}</span><span class="token punctuation" style="color: rgb(153, 153, 153);">}</span>
<span class="token punctuation" style="color: rgb(153, 153, 153);">.</span><span class="token punctuation" style="color: rgb(153, 153, 153);">.</span><span class="token punctuation" style="color: rgb(153, 153, 153);">.</span>
<span class="token markup"><span class="token tag" style="color: rgb(218, 86, 74);"><span class="token tag"><span class="token punctuation" style="color: rgb(153, 153, 153);">&lt;/</span>form</span><span class="token punctuation" style="color: rgb(153, 153, 153);">&gt;</span></span></span></code></pre><p style="margin-bottom: 0px; line-height: 1.7; font-size: 14.5px; color: rgb(82, 82, 82); font-family: &quot;Source Sans Pro&quot;, sans-serif;">在Ajax header中加入token</p><div style="color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;"><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">meta</span> <span style="color: #9cdcfe;">name</span>=<span style="color: #ce9178;">"csrf-token"</span> <span style="color: #9cdcfe;">content</span>=<span style="color: #ce9178;">"</span><span style="color: #dcdcaa;">{{</span><span style="color: #ce9178;"> </span><span style="color: #dcdcaa;">csrf_token</span><span style="color: #ce9178;">() </span><span style="color: #dcdcaa;">}}</span><span style="color: #ce9178;">"</span><span style="color: #808080;">&gt;</span></div><p style="margin-bottom: 0px; line-height: 1.7; font-size: 14.5px; color: rgb(82, 82, 82); font-family: &quot;Source Sans Pro&quot;, sans-serif;"><br></p><div style="color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;"><div><span style="color: #9cdcfe;">$</span>.<span style="color: #dcdcaa;">ajax</span>({</div><div>        <span style="color: #9cdcfe;">data:</span> <span style="color: #9cdcfe;">form_data</span>,</div><div>        <span style="color: #9cdcfe;">type:</span> <span style="color: #ce9178;">"POST"</span>,</div><div>        <span style="color: #9cdcfe;">url:</span> <span style="color: #ce9178;">\'</span><span style="color: #ce9178;">\'</span>,</div><div>        <span style="color: #9cdcfe;">headers:</span> {</div><div>          <span style="color: #ce9178;">\'X-CSRF-TOKEN\'</span><span style="color: #9cdcfe;">:</span> <span style="color: #dcdcaa;">$</span>(<span style="color: #ce9178;">\'meta[name="csrf-token"]\'</span>).<span style="color: #dcdcaa;">attr</span>(<span style="color: #ce9178;">\'content\'</span>)</div><div>        },</div><div>        <span style="color: #9cdcfe;">cache:</span> <span style="color: #569cd6;">false</span>,</div><div>        <span style="color: #9cdcfe;">contentType:</span> <span style="color: #569cd6;">false</span>,</div><div>        <span style="color: #9cdcfe;">processData:</span> <span style="color: #569cd6;">false</span>,</div><div>        <span style="color: #dcdcaa;">success</span><span style="color: #9cdcfe;">:</span> <span style="color: #569cd6;">function</span>() {</div><div>        },</div><div>      });</div><div>    }</div></div>',
                'created_at' => '2020-04-11 07:36:36',
                'updated_at' => '2020-04-11 07:36:36',
                'status' => 1,
            ),
            14 => 
            array (
                'id' => 15,
                'author' => 1,
                'title' => '在自訂Middle中取不到Session的問題',
                'subtitle' => 'Laravel',
                'date' => '2020-04-11',
            'content' => '<p>在app/Https/kernel.php中定義middleware時必須像內建的web一樣引入StartSession等需要的Class</p><p><br></p><div style="color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;"><div><span style="color: #569cd6;">protected</span> <span style="color: #9cdcfe;">$middlewareGroups</span> = [</div><div>        <span style="color: #ce9178;">\'web\'</span> =&gt; [</div><div>            \\App\\Http\\Middleware\\<span style="color: #4ec9b0;">EncryptCookies</span>::<span style="color: #569cd6;">class</span>,</div><div>            \\Illuminate\\Cookie\\Middleware\\<span style="color: #4ec9b0;">AddQueuedCookiesToResponse</span>::<span style="color: #569cd6;">class</span>,</div><div>            \\Illuminate\\Session\\Middleware\\<span style="color: #4ec9b0;">StartSession</span>::<span style="color: #569cd6;">class</span>,</div><div>            \\Illuminate\\View\\Middleware\\<span style="color: #4ec9b0;">ShareErrorsFromSession</span>::<span style="color: #569cd6;">class</span>,</div><div>            \\App\\Http\\Middleware\\<span style="color: #4ec9b0;">VerifyCsrfToken</span>::<span style="color: #569cd6;">class</span>,</div><div>            \\Illuminate\\Routing\\Middleware\\<span style="color: #4ec9b0;">SubstituteBindings</span>::<span style="color: #569cd6;">class</span>,</div><div>        ],</div><br><div>        <span style="color: #ce9178;">\'Your Middleware\'</span> =&gt; [</div><div>            \\App\\Http\\Middleware\\<span style="color: #4ec9b0;">EncryptCookies</span>::<span style="color: #569cd6;">class</span>,</div><div>            \\Illuminate\\Cookie\\Middleware\\<span style="color: #4ec9b0;">AddQueuedCookiesToResponse</span>::<span style="color: #569cd6;">class</span>,</div><div>            \\Illuminate\\Session\\Middleware\\<span style="color: #4ec9b0;">StartSession</span>::<span style="color: #569cd6;">class</span>,</div><div>            \\Illuminate\\View\\Middleware\\<span style="color: #4ec9b0;">ShareErrorsFromSession</span>::<span style="color: #569cd6;">class</span>,</div><div>            \\App\\Http\\Middleware\\<span style="color: #4ec9b0;">VerifyCsrfToken</span>::<span style="color: #569cd6;">class</span>,</div><div>            \\Illuminate\\Routing\\Middleware\\<span style="color: #4ec9b0;">SubstituteBindings</span>::<span style="color: #569cd6;">class</span>,</div><div>            \\App\\Http\\Middleware\\<span style="color: #4ec9b0;">UserMiddleware</span>::<span style="color: #569cd6;">class</span></div><div>        ],</div><div>    ];</div></div>',
                'created_at' => '2020-04-11 07:52:25',
                'updated_at' => '2020-04-11 07:52:25',
                'status' => 1,
            ),
            15 => 
            array (
                'id' => 16,
                'author' => 1,
                'title' => 'test',
                'subtitle' => '321',
                'date' => '2020-04-18',
                'content' => '<p>2321</p>',
                'created_at' => '2020-04-18 05:51:48',
                'updated_at' => '2020-04-18 05:51:55',
                'status' => 0,
            ),
        ));
        
        
    }
}